{% comment %}
  Set the extension of your color files below. Use 'png', 'jpeg', 'jpg' or 'gif'.
{% endcomment %}

{% assign file_extension = 'png' %}

{% if swatch == blank %}
<div class="swatch error">
  <p>You must include the snippet swatch.liquid with the name of a product option.</p>
  <p>Use: <code>{% raw %}{% render 'swatch' with 'name of your product option here' %}{% endraw %}</code></p>
  <p>Example: <code>{% raw %}{% render 'swatch' with 'Color' %}{% endraw %}</code></p>
</div>
{% else %}

{% assign found_option = false %}
{% assign is_color = false %}
{% assign option_index = 0 %}

{% for option in product.options %}
  {% if option == swatch %}
    {% assign found_option = true %}
    {% assign option_index = forloop.index0 %}
    {% assign downcased_option = swatch | downcase %}
    {% if downcased_option contains 'color' or downcased_option contains 'color' %}
      {% assign is_color = true %}
    {% endif %}
  {% endif %}
{% endfor %}

{% unless found_option %}
<div class="swatch error">
  <p>You included the snippet swatch.liquid with the name of a product option — <code>'{{ swatch }}'</code> — that does not belong to your product.</p>
  <p>Use <code>{% raw %}{% render 'swatch' with 'name of your product option here' %}{% endraw %}</code></p>
  <p>Example: <code>{% raw %}{% render 'swatch' with 'Color' %}{% endraw %}</code></p>
  <p><strong>This is case-sensitive!</strong> Do not put in <code>'color'</code> if your product option name is <code>'Color'</code>.</p>
</div>
{% else %}
<div class="swatches-wrapper col-md-12">
  <div class="swatch clearfix" data-option-index="{{ option_index }}">
    <div class="swatch-title">{{ swatch }}</div>
    {% assign values = '' %}
    {% for variant in product.variants %}
      {% assign value = variant.options[option_index] %}

      {% comment %}Check if another variant with same value for given option is available{% endcomment %}
      {% assign available = variant.available %}
      {% for v in product.variants %}
        {% if v.id != variant.id and v.options[option_index] == value and v.available %}
          {% assign available = true %}
        {% endif %}
      {% endfor %}

      {% assign hide = false %}
      {% if hide_out_of_stock and product.options_with_values.size == 1 and available == false %}
        {% assign hide = true %}
      {% endif %}
      {% unless values contains value or hide %}
        {% assign values = values | join: ',' %}
        {% assign values = values | append: ',' | append: value %}
        {% assign values = values | split: ',' %}
        <div data-value="{{ value | escape }}" class="swatch-element {% if is_color %}color {% endif %}{{ value | handle }} {% if available %}available{% else %}soldout{% endif %}">
          {% if is_color %}
          <div class="tooltip">{{ value }}</div>
          {% endif %}
          <input id="section-{{ section.id }}-swatch-{{ option_index }}-{{ value | handle }}" type="radio" name="option-{{ option_index }}" value="{{ value | escape }}"{% if product.selected_or_first_available_variant.options[option_index] == value %} checked{% endif %} {% unless available %}disabled{% endunless %} />
          {% if is_color %}
          <label for="section-{{ section.id }}-swatch-{{ option_index }}-{{ value | handle }}" style="background-color: {{ value | split: ' ' | last | handle }}; background-image: url({{ value | handle | append: '.' | append: file_extension | asset_url }})">
            <img class="crossed-out" src="{{ 'soldout.png' | asset_url }}" />
          </label>
          {% else %}
          <label for="section-{{ section.id }}-swatch-{{ option_index }}-{{ value | handle }}">
            {{ value }}
            <img class="crossed-out" src="{{ 'soldout.png' | asset_url }}" />
          </label>
          {% endif %}
        </div>
      {% endunless %}
    {% endfor %}
  </div>
</div>

{% endunless %}

{% endif %}
